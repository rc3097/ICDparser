#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('Parser.py'): {47: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('Parser.py'): {}}
edit.file-encoding = {loc('Writer.py'): 'cp936'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'RD5MbGdyTOEx1YVN8DOvqlSErt'\
        'M9GPF9',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23365172667156497,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Anaconda/Lib/_strptime.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/_strptime.py'),
                      'LocaleTime')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'),
                      'allow_connection_pickling')]},
        loc('../ID/liveParser/liveeps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/liveParser/liveeps.py'),
                      'epsFilter')]},
        loc('../ID/liveParser/livereturn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/livereturn.py'),
                      'filepath')]},
        loc('../ID/liveParser/newLive.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/newLive.py'),
                      'Doreturn')]},
        loc('../ID/liveParser/timepointchecker.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ID/liveParser/timepointchecker.py'),
                             'wakeuptimes')]],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/timepointchecker.py'),
                      'filepath')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('file:C:/Anaconda/Lib/email/quoprimime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/email/quoprimime.py'),
                      'body_decode')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'),
                      'ApplyResult')]},
        loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'),
                      'declarative_props')]},
        loc('file:C:/Anaconda/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/zipfile.py'),
                      'BadZipfile')]},
        loc('../ID/calculation/ReadData.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ID/calculation/ReadData.py'),
                             'year')]],
        'top-node': [('function def',
                      loc('../ID/calculation/ReadData.py'),
                      'calculatereturn')]},
        loc('../ID/calculation/caldailyreturn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/calculation/caldailyreturn.py'),
                      'Caldaily_return')]},
        loc('../ID/fillmissingfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/fillmissingfile.py'),
                      'args')]},
        loc('../ID/getrecentResult/GroupHistoryResult.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/getrecentResult/GroupHistoryResult.py'),
                      'args')]},
        loc('../ID/historialfilling/10b5fixer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/10b5fixer.py'),
                      'filepath')]},
        loc('../ID/historialfilling/CONFICTfixer.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/CONFICTfixer.py'),
                             'Updator')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/CONFICTfixer.py'),
                      'filepath')]},
        loc('../ID/historialfilling/Recalculateprice.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/Recalculateprice.py'),
                      'updator')]},
        loc('../ID/historialfilling/capiq_gap.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/capiq_gap.py'),
                             'Gapfixer')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/capiq_gap.py'),
                      'filepath')]},
        loc('../ID/historialfilling/earningdate_fix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/historialfilling/earningdate_fix.py'),
                      'EspDateParser')]},
        loc('../ID/historialfilling/epsfilling.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/epsfilling.py'),
                      'epsfill')]},
        loc('../ID/historialfilling/fixGT.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/fixGT.py'),
                             'GTfixer')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/fixGT.py'),
                      'filepath')]},
        loc('../ID/historialfilling/investorType&activeTicker.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/investorType&activeTicker.py'),
                      'filepath')]},
        loc('../ID/mainLogic.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('../ID/mainLogic.py'),
        'main')]},
        loc('../ID/models/DB.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('class def',
        loc('../ID/models/DB.py'),
        'account')]],
                                    'top-node': [('class def',
        loc('../ID/models/DB.py'),
        'account')]},
        loc('../ID/models/add_info.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/models/add_info.py'),
                             'insiderCounter')]],
        'top-node': [('class def',
                      loc('../ID/models/add_info.py'),
                      'insiderCounter')]},
        loc('../ID/models/criteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/models/criteria.py'),
                      'catch')]},
        loc('../ID/models/getVar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/models/getVar.py'),
                      'getVar')]},
        loc('../ID/models/htmlForm.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../ID/models/htmlFormer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/htmlFormer.py'),
                      'db')]},
        loc('../ID/models/liveweightAverage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/liveweightAverage.py'),
                      'db')]},
        loc('../ID/models/mail.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../ID/models/mail.py'),
        'ANLST')]},
        loc('../ID/models/mainLogic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/models/mainLogic.py'),
                      'main')]},
        loc('../ID/models/parser.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/parser.py'),
                      'ek')]},
        loc('../ID/models/processor.py'): {'expanded-nodes': [[('class def',
        loc('../ID/models/processor.py'),
        'makeForm')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/processor.py'),
                      'db')]},
        loc('../ID/models/updatePrice.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/models/updatePrice.py'),
                             'downLoadPrice')]],
        'top-node': [('class def',
                      loc('../ID/models/updatePrice.py'),
                      'downLoadPrice')]},
        loc('../ID/strategies/Using2column.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/strategies/Using2column.py'),
                      'creator')]},
        loc('../ID/tester/extractTXTtester.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../ID/tester/extractTXTtester.py'),
                             'main')]],
        'top-node': [('generic attribute',
                      loc('../ID/tester/extractTXTtester.py'),
                      'filepath')]},
        loc('../ID/tester/pooltester.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/tester/pooltester.py'),
                      'func')]},
        loc('../ID/weightAverage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/weightAverage.py'),
                      'main')]},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #1'),
        'epsFilter')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.29032258064516125,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'Python Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'rbina',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'form_id',
                                       'fReverse': False,
                                       'fSearchText': u'prosthesis',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('../VirtualPlant\x0birtualplant2.0/VirtualPlant/manage.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha'}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 25,
                       'folded-linenos': [],
                       'history': {u'file:D:/Python/Medtrak/Parser.py': ["a "\
        "= [u'finger(s)', u'thigh', u'femur', u'thumb', u'jaw', u'pelvic reg"\
        "ion and thigh', u'initial encounter for fracture', u'humerus', 'joi"\
        "nt', u'foot', u'mid-cervical region', u\"angle's class ii\", 'shoul"\
        "der', u'ankle and toes', u'occipito-atlanto-axial region', u'bone',"\
        " u'ulna and radius', u'ring finger',  u'thoracolumbar region', u'ti"\
        "bia and fibula', u'vertebrae', u'ankle and joints of foot', u'arm',"\
        " u'thoracic region', u'lumbar region', u'distal tibia', u'finger', "\
        "u'leg', u'ulna', u'subsequent encounter for fracture with malunion'"\
        ", 'head region', u'little finger', u\"angle's class iii\", u'with t"\
        "ophus (tophi)', u'fibula', u'central', u'proximal tibia', u'radius "\
        "and ulna',u'radius, u'upper arm', u'organ involvement unspecified',"\
        " u'bone plate', u'upper arms', u'high cervical region', u'excluding"\
        " foot', u'overuse and pressure other', u'distal femur', u'middle fi"\
        "nger', u'distal humerus', u'subsequent encounter for fracture with "\
        "nonunion', u'ankle', u'joints of hand', u'multiple sites in spine',"\
        " u'sequela', u'proximal femur', u'index finger', u'distal radius', "\
        "u'ear', u'organ or system involvement unspecified', u'sequela of fr"\
        "acture', u'without tophus (tophi)', u'with other organ involvement'"\
        ", u'with respiratory involvement', 'elbow', u'lumbosacral region', "\
        "u'hip', u'forearm', u'thoracolumbar and lumbosacral intervertebral "\
        "disc disorder', u'pelvis', u'toe(s)', u'proximal humerus', u'tibia'"\
        ", u'with myopathy', u'subsequent encounter for fracture with routin"\
        "e healing', u'ankle and joints of  foot', u'hand', u'finger joints'"\
        ", u'wrist', u'overuse and pressure other site', u'ankle and foot', "\
        "u'knee', u'cervicothoracic region', u\"angle's class i\", u'cervica"\
        "l region', 'vertebra', u'upper limb', u'sacral and sacrococcygeal r"\
        "egion',  u'lower leg']\n",
        "a = [u'finger(s)', u'thigh', u'femur', u'thumb', u'jaw', u'pelvic r"\
        "egion and thigh', u'initial encounter for fracture', u'humerus', 'j"\
        "oint', u'foot', u'mid-cervical region', u\"angle's class ii\", 'sho"\
        "ulder', u'ankle and toes', u'occipito-atlanto-axial region', u'bone"\
        "', u'ulna and radius', u'ring finger',  u'thoracolumbar region', u'"\
        "tibia and fibula', u'vertebrae', u'ankle and joints of foot', u'arm"\
        "', u'thoracic region', u'lumbar region', u'distal tibia', u'finger'"\
        ", u'leg', u'ulna', u'subsequent encounter for fracture with malunio"\
        "n', 'head region', u'little finger', u\"angle's class iii\", u'with"\
        " tophus (tophi)', u'fibula', u'central', u'proximal tibia', u'radiu"\
        "s and ulna',u'radius', u'upper arm', u'organ involvement unspecifie"\
        "d', u'bone plate', u'upper arms', u'high cervical region', u'exclud"\
        "ing foot', u'overuse and pressure other', u'distal femur', u'middle"\
        " finger', u'distal humerus', u'subsequent encounter for fracture wi"\
        "th nonunion', u'ankle', u'joints of hand', u'multiple sites in spin"\
        "e', u'sequela', u'proximal femur', u'index finger', u'distal radius"\
        "', u'ear', u'organ or system involvement unspecified', u'sequela of"\
        " fracture', u'without tophus (tophi)', u'with other organ involveme"\
        "nt', u'with respiratory involvement', 'elbow', u'lumbosacral region"\
        "', u'hip', u'forearm', u'thoracolumbar and lumbosacral intervertebr"\
        "al disc disorder', u'pelvis', u'toe(s)', u'proximal humerus', u'tib"\
        "ia', u'with myopathy', u'subsequent encounter for fracture with rou"\
        "tine healing', u'ankle and joints of  foot', u'hand', u'finger join"\
        "ts', u'wrist', u'overuse and pressure other site', u'ankle and foot"\
        "', u'knee', u'cervicothoracic region', u\"angle's class i\", u'cerv"\
        "ical region', 'vertebra', u'upper limb', u'sacral and sacrococcygea"\
        "l region',  u'lower leg']\n",
        'a.sort()\n',
        'a.sort(key=lambda x: len(x.split(" ")));\n',
        'a.sort(key=lambda x: len(x.split(" ")),reversed=True);\n',
        'a\n',
        "a = [u'finger(s)', u'thigh', u'femur', u'thumb', u'jaw', u'pelvic r"\
        "egion and thigh', u'initial encounter for fracture', u'humerus', 'j"\
        "oint', u'foot', u'mid-cervical region', u\"angle's class ii\", 'sho"\
        "ulder', u'ankle and toes', u'occipito-atlanto-axial region', u'bone"\
        "', u'ulna and radius', u'ring finger',  u'thoracolumbar region', u'"\
        "tibia and fibula', u'vertebrae', u'ankle and joints of foot', u'arm"\
        "', u'thoracic region', u'lumbar region', u'distal tibia', u'finger'"\
        ", u'leg', u'ulna', u'subsequent encounter for fracture with malunio"\
        "n', 'head region', u'little finger', u\"angle's class iii\", u'with"\
        " tophus (tophi)', u'fibula', u'central', u'proximal tibia', u'radiu"\
        "s and ulna',u'radius', u'upper arm', u'organ involvement unspecifie"\
        "d', u'bone plate', u'upper arms', u'high cervical region', u'exclud"\
        "ing foot', u'overuse and pressure other', u'distal femur', u'middle"\
        " finger', u'distal humerus', u'subsequent encounter for fracture wi"\
        "th nonunion', u'ankle', u'joints of hand', u'multiple sites in spin"\
        "e', u'sequela', u'proximal femur', u'index finger', u'distal radius"\
        "', u'ear', u'organ or system involvement unspecified', u'sequela of"\
        " fracture', u'without tophus (tophi)', u'with other organ involveme"\
        "nt', u'with respiratory involvement', 'elbow', u'lumbosacral region"\
        "', u'hip', u'forearm', u'thoracolumbar and lumbosacral intervertebr"\
        "al disc disorder', u'pelvis', u'toe(s)', u'proximal humerus', u'tib"\
        "ia', u'with myopathy', u'subsequent encounter for fracture with rou"\
        "tine healing', u'ankle and joints of foot', u'hand', u'finger joint"\
        "s', u'wrist', u'overuse and pressure other site', u'ankle and foot'"\
        ", u'knee', u'cervicothoracic region', u\"angle's class i\", u'cervi"\
        "cal region', 'vertebra', u'upper limb', u'sacral and sacrococcygeal"\
        " region',  u'lower leg']\n",
        'a.sort(key=lambda x: len(x.split(" ")),reverse=True);\n',
        'self.areas.sort(key=lambda x: len(x.split(" ")),reverse=True);\n',
        'self.areas\n',
        'response = urllib2.urlopen("http://www.icd10data.com/ICD10CM/Codes/'\
        'M00-M99");\n',
        'desc\n']},
                       'launch-id': None,
                       'sel-line': 28,
                       'sel-line-start': 15276,
                       'selection_end': 15276,
                       'selection_start': 15276}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'a'),
                                       ('eval',
        u'newForms'),
                                       ('eval',
        u'f.rptOwnerCik == forms[i].rptOwnerCik')],
                       'tree-state': {'expanded-nodes': [(0,)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 172,
                       'selection_end': 172,
                       'selection_start': 172}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('Writer.py'),
        {'attrib-starts': [('Writer',
                            1),
                           ('Writer.insert',
                            14)],
         'first-line': 12,
         'folded-linenos': [],
         'sel-line': 22,
         'sel-line-start': 1121,
         'selection_end': 1128,
         'selection_start': 1128},
        1460653919.433],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.getsublist',
                             27)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1305,
          'selection_end': 1354,
          'selection_start': 1354},
         1460654089.8],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460654103.739],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.getsublist',
                             27)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1305,
          'selection_end': 1354,
          'selection_start': 1354},
         1460654216.793],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460735673.455],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 106,
          'sel-line-start': 4533,
          'selection_end': 4533,
          'selection_start': 4533},
         1460744293.182],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [('decode',
                             14)],
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 233,
          'selection_end': 233,
          'selection_start': 233},
         1460744302.02],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1460744302.62],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 106,
          'sel-line-start': 4533,
          'selection_end': 4533,
          'selection_start': 4533},
         1460744303.977],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460744304.68],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1460744306.381],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 85,
          'folded-linenos': [],
          'sel-line': 104,
          'sel-line-start': 4536,
          'selection_end': 4536,
          'selection_start': 4536},
         1460744920.238],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [('decode',
                             14)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 233,
          'selection_end': 233,
          'selection_start': 233},
         1460744926.088],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 85,
          'folded-linenos': [],
          'sel-line': 104,
          'sel-line-start': 4481,
          'selection_end': 4481,
          'selection_start': 4481},
         1460745104.496],
        [loc('file:C:/Anaconda/Lib/urllib2.py'),
         {'attrib-starts': [('urlopen',
                             130)],
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5235,
          'selection_end': 5235,
          'selection_start': 5235},
         1460745112.334],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 102,
          'folded-linenos': [],
          'sel-line': 108,
          'sel-line-start': 5930,
          'selection_end': 5930,
          'selection_start': 5930},
         1461171001.223],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 102,
          'folded-linenos': [],
          'sel-line': 108,
          'sel-line-start': 5930,
          'selection_end': 5931,
          'selection_start': 5931},
         1461171001.448],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 90,
          'folded-linenos': [],
          'sel-line': 108,
          'sel-line-start': 5933,
          'selection_end': 6052,
          'selection_start': 6042},
         1461171377.35],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             8),
                            ('Parser.__init__',
                             12)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 2657,
          'selection_end': 2657,
          'selection_start': 2657},
         1461171800.078],
        [loc('file:C:/Anaconda/Lib/urllib2.py'),
         {'attrib-starts': [('AbstractHTTPHandler',
                             1113),
                            ('AbstractHTTPHandler.do_open',
                             1150)],
          'first-line': 1177,
          'folded-linenos': [],
          'sel-line': 1196,
          'sel-line-start': 42903,
          'selection_end': 42903,
          'selection_start': 42903},
         1461171809.328]],
        20),
        'current-loc': loc('Parser.py'),
        'editor-state-list': [(loc('Parser.py'),
                               {'attrib-starts': [('Parser',
        8),
        ('Parser.selectcode',
         59)],
                                'first-line': 61,
                                'folded-linenos': [],
                                'sel-line': 67,
                                'sel-line-start': 4163,
                                'selection_end': 4206,
                                'selection_start': 4202}),
                              (loc('file:C:/Anaconda/Lib/urllib2.py'),
                               {'attrib-starts': [('AbstractHTTPHandler',
        1113),
        ('AbstractHTTPHandler.do_open',
         1150)],
                                'first-line': 1177,
                                'folded-linenos': [],
                                'sel-line': 1196,
                                'sel-line-start': 42903,
                                'selection_end': 42903,
                                'selection_start': 42903}),
                              (loc('Writer.py'),
                               {'attrib-starts': [('Writer',
        1),
        ('Writer.insert',
         14)],
                                'first-line': 12,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 1121,
                                'selection_end': 1217,
                                'selection_start': 1217})],
        'has-focus': True,
        'locked': False},
        [loc('Parser.py'),
         loc('file:C:/Anaconda/Lib/urllib2.py'),
         loc('Writer.py')]),
                               'open_files': [u'Writer.py',
        u'C:/Anaconda/Lib/urllib2.py',
        u'Parser.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.43984600577478344},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (683,
                         0,
                         667,
                         690)}]}
guimgr.recent-documents = [loc('Parser.py'),
                           loc('file:C:/Anaconda/Lib/urllib2.py'),
                           loc('Writer.py')]
testing.stored-results = (1,
                          [],
                          {})
