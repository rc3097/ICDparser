#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('Parser.py'): {}}
edit.file-encoding = {loc('Writer.py'): 'cp936'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'RD5MbGdyTOEx1YVN8DOvqlSErt'\
        'M9GPF9',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23365172667156497,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Anaconda/Lib/_strptime.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/_strptime.py'),
                      'LocaleTime')]},
        loc('file:C:/Anaconda/Lib/email/quoprimime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/email/quoprimime.py'),
                      'body_decode')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'),
                      'allow_connection_pickling')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'),
                      'ApplyResult')]},
        loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'),
                      'declarative_props')]},
        loc('file:C:/Anaconda/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/zipfile.py'),
                      'BadZipfile')]},
        loc('../ID/calculation/ReadData.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ID/calculation/ReadData.py'),
                             'year')]],
        'top-node': [('function def',
                      loc('../ID/calculation/ReadData.py'),
                      'calculatereturn')]},
        loc('../ID/calculation/caldailyreturn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/calculation/caldailyreturn.py'),
                      'Caldaily_return')]},
        loc('../ID/fillmissingfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/fillmissingfile.py'),
                      'args')]},
        loc('../ID/getrecentResult/GroupHistoryResult.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/getrecentResult/GroupHistoryResult.py'),
                      'args')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('../ID/historialfilling/10b5fixer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/10b5fixer.py'),
                      'filepath')]},
        loc('../ID/historialfilling/CONFICTfixer.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/CONFICTfixer.py'),
                             'Updator')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/CONFICTfixer.py'),
                      'filepath')]},
        loc('../ID/historialfilling/Recalculateprice.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/Recalculateprice.py'),
                      'updator')]},
        loc('../ID/historialfilling/capiq_gap.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/capiq_gap.py'),
                             'Gapfixer')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/capiq_gap.py'),
                      'filepath')]},
        loc('../ID/historialfilling/earningdate_fix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/historialfilling/earningdate_fix.py'),
                      'EspDateParser')]},
        loc('../ID/historialfilling/epsfilling.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/epsfilling.py'),
                      'epsfill')]},
        loc('../ID/historialfilling/fixGT.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/historialfilling/fixGT.py'),
                             'GTfixer')]],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/fixGT.py'),
                      'filepath')]},
        loc('../ID/historialfilling/investorType&activeTicker.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/historialfilling/investorType&activeTicker.py'),
                      'filepath')]},
        loc('../ID/liveParser/liveeps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/liveParser/liveeps.py'),
                      'epsFilter')]},
        loc('../ID/liveParser/livereturn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/livereturn.py'),
                      'filepath')]},
        loc('../ID/liveParser/newLive.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/newLive.py'),
                      'Doreturn')]},
        loc('../ID/liveParser/timepointchecker.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ID/liveParser/timepointchecker.py'),
                             'wakeuptimes')]],
        'top-node': [('generic attribute',
                      loc('../ID/liveParser/timepointchecker.py'),
                      'filepath')]},
        loc('../ID/mainLogic.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('../ID/mainLogic.py'),
        'main')]},
        loc('../ID/models/DB.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('class def',
        loc('../ID/models/DB.py'),
        'account')]],
                                    'top-node': [('class def',
        loc('../ID/models/DB.py'),
        'account')]},
        loc('../ID/models/add_info.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/models/add_info.py'),
                             'insiderCounter')]],
        'top-node': [('class def',
                      loc('../ID/models/add_info.py'),
                      'insiderCounter')]},
        loc('../ID/models/criteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/models/criteria.py'),
                      'catch')]},
        loc('../ID/models/getVar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ID/models/getVar.py'),
                      'getVar')]},
        loc('../ID/models/htmlForm.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../ID/models/htmlFormer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/htmlFormer.py'),
                      'db')]},
        loc('../ID/models/liveweightAverage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/liveweightAverage.py'),
                      'db')]},
        loc('../ID/models/mail.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../ID/models/mail.py'),
        'ANLST')]},
        loc('../ID/models/mainLogic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/models/mainLogic.py'),
                      'main')]},
        loc('../ID/models/parser.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/parser.py'),
                      'ek')]},
        loc('../ID/models/processor.py'): {'expanded-nodes': [[('class def',
        loc('../ID/models/processor.py'),
        'makeForm')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/models/processor.py'),
                      'db')]},
        loc('../ID/models/updatePrice.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../ID/models/updatePrice.py'),
                             'downLoadPrice')]],
        'top-node': [('class def',
                      loc('../ID/models/updatePrice.py'),
                      'downLoadPrice')]},
        loc('../ID/strategies/Using2column.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ID/strategies/Using2column.py'),
                      'creator')]},
        loc('../ID/tester/extractTXTtester.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../ID/tester/extractTXTtester.py'),
                             'main')]],
        'top-node': [('generic attribute',
                      loc('../ID/tester/extractTXTtester.py'),
                      'filepath')]},
        loc('../ID/tester/pooltester.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/tester/pooltester.py'),
                      'func')]},
        loc('../ID/weightAverage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ID/weightAverage.py'),
                      'main')]},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #1'),
        'epsFilter')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.29032258064516125,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'Python Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'rbina',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'form_id',
                                       'fReverse': False,
                                       'fSearchText': u'Lbina',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('../VirtualPlant\x0birtualplant2.0/VirtualPlant/manage.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha'}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 120,
                       'folded-linenos': [],
                       'history': {u'file:D:/Python/Medtrak/Parser.py': ['(d'\
        'esc_sets[0].find(pos))\n',
        'description_obj\n',
        'description_obj.text.find("a")\n',
        "unicode(\"\xe2\x80\xa6\xe2\x80\xa6\", 'gbk')\n",
        "unicode(\"\xe2\x80\xa6\xe2\x80\xa6\", 'utf-8')\n",
        '"\xe2\x80\xa6\xe2\x80\xa6".decode("gbk")\n',
        '"\xe2\x80\xa6\xe2\x80\xa6".decode("gbk").encode("utf-8")\n',
        '"\xe2\x80\xa6\xe2\x80\xa6".encode("utf-8")\n',
        '"\xe2\x80\xa6\xe2\x80\xa6".decode("utf-8")\n',
        'a = description_obj.text\n',
        'isinstance(a, unicode):\n',
        'isinstance(a, str):\n',
        'a._formatter_parser\n',
        'a._formatter_parser()\n',
        'a.decode("utf-8")\n',
        'a.decode("gbk")\n',
        '"\xe2\x80\xa6\xe2\x80\xa6".decode("utf-8").encode("gbk")\n',
        'b ="\xe2\x80\xa6\xe2\x80\xa6".decode("utf-8").encode("gbk")\n',
        'a = unicode(a)\n',
        'a\n',
        'a.find(b)\n',
        'a = unicode(a,"utf-8")\n',
        'a.decode("ascii")\n',
        'a.decode("ascii").encode("unicode")\n',
        'a.decode("ascii").encode("utf-8")\n',
        'c =a.decode("ascii").encode("utf-8")\n',
        'c.find("\xe2\x80\xa6\xe2\x80\xa6")\n',
        'description_obj.text.decode("ascii").encode("utf-8")\n',
        'description_obj.text.decode("ascii")\n',
        'description_obj.text.find("\xe2\x80\xa6\xe2\x80\xa6")\n',
        '"\xe2\x80\xa6\xe2\x80\xa6"\n',
        'description_obj.text\n',
        'description_obj.text.find("\\u2026\\u2026")\n',
        'description_obj.text.find(u"\\u2026\\u2026")\n',
        'unicode("\xe2\x80\xa6\xe2\x80\xa6")\n',
        'unicode("\xe2\x80\xa6\xe2\x80\xa6","gbk")\n',
        'unicode("\xe2\x80\xa6\xe2\x80\xa6","utf-8")\n',
        'link_obj.attrs["href"]\n',
        'soup.select("div div div h2")\n',
        'a  = soup.select("div div div h2")\n',
        'a[0].text\n']},
                       'launch-id': None,
                       'sel-line': 123,
                       'sel-line-start': 4520,
                       'selection_end': 4520,
                       'selection_start': 4520}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'a'),
                                       ('eval',
        u'newForms'),
                                       ('eval',
        u'f.rptOwnerCik == forms[i].rptOwnerCik')],
                       'tree-state': {'expanded-nodes': [(0,)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 21,
                       'folded-linenos': [],
                       'history': {None: ['from sets import Set\n',
        '"right l" in s\n',
        'sl = ["right","left"]\n',
        's in "right l"\n',
        'sl in "right l"\n',
        '["a","b"]\n',
        'a = ["a","b"]\n',
        's = Set(["right","left"])\n',
        'for a in s:\n    print a\n\n',
        "unicode(\"\xe2\x80\xa6\xe2\x80\xa6\", 'utf-8')\n"]},
                       'launch-id': None,
                       'sel-line': 24,
                       'sel-line-start': 671,
                       'selection_end': 697,
                       'selection_start': 671}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('Parser.py'),
        {'attrib-starts': [('Parser',
                            6),
                           ('Parser.selectcode',
                            37)],
         'first-line': 20,
         'folded-linenos': [],
         'sel-line': 62,
         'sel-line-start': 2702,
         'selection_end': 2731,
         'selection_start': 2731},
        1460653741.585],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1128,
          'selection_start': 1128},
         1460653916.556],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.selectcode',
                             37)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 62,
          'sel-line-start': 2702,
          'selection_end': 2731,
          'selection_start': 2731},
         1460653917.654],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1128,
          'selection_start': 1128},
         1460653918.338],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.selectcode',
                             37)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 62,
          'sel-line-start': 2702,
          'selection_end': 2731,
          'selection_start': 2731},
         1460653919.0],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1128,
          'selection_start': 1128},
         1460653919.433],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.getsublist',
                             27)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1305,
          'selection_end': 1354,
          'selection_start': 1354},
         1460654089.8],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460654103.739],
        [loc('Parser.py'),
         {'attrib-starts': [('Parser',
                             6),
                            ('Parser.getsublist',
                             27)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 1305,
          'selection_end': 1354,
          'selection_start': 1354},
         1460654216.793],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460735673.455],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 106,
          'sel-line-start': 4533,
          'selection_end': 4533,
          'selection_start': 4533},
         1460744293.182],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [('decode',
                             14)],
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 233,
          'selection_end': 233,
          'selection_start': 233},
         1460744302.02],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1460744302.62],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 106,
          'sel-line-start': 4533,
          'selection_end': 4533,
          'selection_start': 4533},
         1460744303.977],
        [loc('Writer.py'),
         {'attrib-starts': [('Writer',
                             1),
                            ('Writer.insert',
                             14)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 1121,
          'selection_end': 1217,
          'selection_start': 1217},
         1460744304.68],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1460744306.381],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 85,
          'folded-linenos': [],
          'sel-line': 104,
          'sel-line-start': 4536,
          'selection_end': 4536,
          'selection_start': 4536},
         1460744920.238],
        [loc('file:C:/Anaconda/Lib/encodings/utf_8.py'),
         {'attrib-starts': [('decode',
                             14)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 233,
          'selection_end': 233,
          'selection_start': 233},
         1460744926.088],
        [loc('Parser.py'),
         {'attrib-starts': [],
          'first-line': 85,
          'folded-linenos': [],
          'sel-line': 104,
          'sel-line-start': 4481,
          'selection_end': 4481,
          'selection_start': 4481},
         1460745104.496],
        [loc('file:C:/Anaconda/Lib/urllib2.py'),
         {'attrib-starts': [('urlopen',
                             130)],
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5235,
          'selection_end': 5235,
          'selection_start': 5235},
         1460745112.334]],
        20),
        'current-loc': loc('Parser.py'),
        'editor-state-list': [(loc('Parser.py'),
                               {'attrib-starts': [('Parser',
        8),
        ('Parser.setarea_side',
         67)],
                                'first-line': 93,
                                'folded-linenos': [],
                                'sel-line': 85,
                                'sel-line-start': 3723,
                                'selection_end': 3760,
                                'selection_start': 3760}),
                              (loc('file:C:/Anaconda/Lib/urllib2.py'),
                               {'attrib-starts': [('urlopen',
        130)],
                                'first-line': 148,
                                'folded-linenos': [],
                                'sel-line': 153,
                                'sel-line-start': 5235,
                                'selection_end': 5235,
                                'selection_start': 5235}),
                              (loc('Writer.py'),
                               {'attrib-starts': [('Writer',
        1),
        ('Writer.insert',
         14)],
                                'first-line': 12,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 1121,
                                'selection_end': 1217,
                                'selection_start': 1217})],
        'has-focus': True,
        'locked': False},
        [loc('Parser.py'),
         loc('file:C:/Anaconda/Lib/urllib2.py'),
         loc('Writer.py')]),
                               'open_files': [u'Writer.py',
        u'Parser.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.43984600577478344},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (683,
                         0,
                         667,
                         690)}]}
guimgr.recent-documents = [loc('Parser.py'),
                           loc('file:C:/Anaconda/Lib/urllib2.py'),
                           loc('Writer.py')]
testing.stored-results = (1,
                          [],
                          {})
